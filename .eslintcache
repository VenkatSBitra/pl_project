[{"D:\\PL\\Project\\pl_project\\src\\index.js":"1","D:\\PL\\Project\\pl_project\\src\\App.js":"2","D:\\PL\\Project\\pl_project\\src\\reportWebVitals.js":"3","D:\\PL\\Project\\pl_project\\src\\customBlocks\\conditionals.js":"4","D:\\PL\\Project\\pl_project\\src\\customBlocks\\variables.js":"5","D:\\PL\\Project\\pl_project\\src\\customBlocks\\expressions.js":"6","D:\\PL\\Project\\pl_project\\src\\customBlocks\\operations.js":"7","D:\\PL\\Project\\pl_project\\src\\customBlocks\\loops.js":"8","D:\\PL\\Project\\pl_project\\src\\customBlocks\\logic.js":"9","D:\\PL\\Project\\pl_project\\src\\customBlocks\\movement.js":"10","D:\\PL\\Project\\pl_project\\src\\DrawCanvas.js":"11","D:\\PL\\Project\\pl_project\\src\\BlocklyApp.js":"12"},{"size":500,"mtime":1651135676000,"results":"13","hashOfConfig":"14"},{"size":915,"mtime":1652038534699,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1651135676000,"results":"16","hashOfConfig":"14"},{"size":4834,"mtime":1651864250860,"results":"17","hashOfConfig":"14"},{"size":2165,"mtime":1652042330460,"results":"18","hashOfConfig":"14"},{"size":1594,"mtime":1651166989542,"results":"19","hashOfConfig":"14"},{"size":4376,"mtime":1651168863840,"results":"20","hashOfConfig":"14"},{"size":857,"mtime":1652032650799,"results":"21","hashOfConfig":"14"},{"size":7740,"mtime":1651240581971,"results":"22","hashOfConfig":"14"},{"size":1698,"mtime":1652041416057,"results":"23","hashOfConfig":"14"},{"size":2479,"mtime":1652042699803,"results":"24","hashOfConfig":"14"},{"size":4348,"mtime":1652041790560,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"hxkhzg",{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\PL\\Project\\pl_project\\src\\index.js",[],["52","53"],"D:\\PL\\Project\\pl_project\\src\\App.js",[],"D:\\PL\\Project\\pl_project\\src\\reportWebVitals.js",[],"D:\\PL\\Project\\pl_project\\src\\customBlocks\\conditionals.js",[],"D:\\PL\\Project\\pl_project\\src\\customBlocks\\variables.js",[],"D:\\PL\\Project\\pl_project\\src\\customBlocks\\expressions.js",[],"D:\\PL\\Project\\pl_project\\src\\customBlocks\\operations.js",[],"D:\\PL\\Project\\pl_project\\src\\customBlocks\\loops.js",[],"D:\\PL\\Project\\pl_project\\src\\customBlocks\\logic.js",[],"D:\\PL\\Project\\pl_project\\src\\customBlocks\\movement.js",[],"D:\\PL\\Project\\pl_project\\src\\DrawCanvas.js",["54","55","56","57"],"import React from \"react\";\r\n\r\nconst DrawCanvas = props => {\r\n    const canvasRef = React.useRef(null);\r\n    const { command, ...rest} = props;\r\n\r\n    React.useEffect(() => {\r\n        if (command === 'Ensure all the blocks and statements are filled') {}\r\n        else {\r\n            const canvas = canvasRef.current;\r\n            const context = canvas.getContext('2d');\r\n            context.restore();\r\n            context.clearRect(0, 0, canvas.width, canvas.height);\r\n            context.save();\r\n            context.translate(canvas.width / 2, canvas.height / 2);\r\n            console.log(command);\r\n            const move = () => {\r\n                try {\r\n                    eval(command); \r\n                } catch (e) {\r\n                    if (e instanceof SyntaxError) {\r\n                        alert(e.message);\r\n                    }\r\n                }\r\n            };\r\n            move();\r\n        }\r\n    }, [command]);\r\n\r\n    const parseCmd = command => {\r\n        let [dir, value] = command.split(\" \")\r\n        let angle = 0\r\n        let resultDir = \"\"\r\n        value = Number(value)\r\n        switch (dir.toUpperCase()) {\r\n            case \"FD\":\r\n                resultDir = \"FORWARD\"\r\n                break\r\n            case \"BK\":\r\n                resultDir = \"BACKWARD\"\r\n                angle = 180\r\n                break\r\n            case \"LT\":\r\n                resultDir = \"LEFT\"\r\n                angle = -value\r\n                break\r\n            case \"RT\":\r\n                resultDir = \"RIGHT\"\r\n                angle = value\r\n                break\r\n        }\r\n        return {\r\n            dir: resultDir,\r\n            value,\r\n            angle: deg2Rad(angle),\r\n        }\r\n    }\r\n\r\n    const deg2Rad = deg => {\r\n        return (deg * Math.PI) / 180\r\n    }\r\n\r\n    const drawTurtle = ctx => {\r\n        ctx.beginPath()\r\n        ctx.moveTo(-7, -7)\r\n        ctx.lineTo(0, 7)\r\n        ctx.lineTo(7, -7)\r\n        ctx.closePath()\r\n        ctx.stroke()\r\n    }\r\n\r\n    const draw = (command, ctx) => {\r\n        const { dir, angle, value } = parseCmd(command)\r\n        console.log(dir, angle, value)\r\n        ctx.rotate(angle)\r\n        if (dir === \"FORWARD\" || dir === \"BACKWARD\") {\r\n            ctx.beginPath()\r\n            ctx.moveTo(0, 0)\r\n            ctx.lineTo(0, value)\r\n            ctx.translate(0, value)\r\n            ctx.closePath()\r\n            ctx.stroke()\r\n        }\r\n    }\r\n\r\n    return <canvas ref={canvasRef} {...rest} />\r\n}\r\n\r\nexport default DrawCanvas;","D:\\PL\\Project\\pl_project\\src\\BlocklyApp.js",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":19,"column":21,"nodeType":"64","messageId":"65","endLine":19,"endColumn":25},{"ruleId":"66","severity":1,"message":"67","line":35,"column":9,"nodeType":"68","messageId":"69","endLine":51,"endColumn":10},{"ruleId":"70","severity":1,"message":"71","line":63,"column":11,"nodeType":"72","messageId":"73","endLine":63,"endColumn":21},{"ruleId":"70","severity":1,"message":"74","line":72,"column":11,"nodeType":"72","messageId":"73","endLine":72,"endColumn":15},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"no-eval","eval can be harmful.","CallExpression","unexpected","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unused-vars","'drawTurtle' is assigned a value but never used.","Identifier","unusedVar","'draw' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]